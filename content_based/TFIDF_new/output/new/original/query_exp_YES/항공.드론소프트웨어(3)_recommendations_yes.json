{
    "meta_info": {
        "user_query": "자율 비행 드론과 스마트 항공 시스템을 개발하기 위해 센서 공학, 제어 설계, 인공지능을 결합한 소프트웨어를 연구하려면 어떤 학습 과정이 필요할까요?",
        "expanded_query": "자율 비행 드론과 스마트 항공 시스템을 개발하기 위해 센서 공학, 제어 설계, 인공지능을 결합한 소프트웨어를 연구하려면 어떤 학습 과정이 필요할까요? 자율 비행 드론 및 스마트 항공 시스템 개발을 위한 복합 소프트웨어 연구 능력 확보 자율 비행 및 스마트 항공 시스템의 소프트웨어 개발자 항공 시스템 소프트웨어 개발 드론 및 항공 시스템 소프트웨어 엔지니어 드론 및 스마트 항공 시스템을 위한 소프트웨어를 설계, 개발 및 최적화하여 자율 비행 기능과 시스템 효율성을 향상시키는 역할을 수행. 서 데이터 처리, 제어 알고리즘 설계, 인공지능 모델 적용 및 통합, 시스템 성능 테스트 및 최적화 센서 공학, 제어 설계, 인공지능 소프트웨어 개발, 알고리즘 설계, 데이터 분석 센서 공학 원리, 제어 시스템 기초, 인공지능 개론 비행 제어 알고리즘, 자율 주행 기술, 드론 특화 소프트웨어 엔지니어링 소프트웨어 프로토타이핑, 시뮬레이션 및 테스트, 통합 및 배포 방법론",
        "given_departments": null,
        "selected_departments": [
            "항공우주공학과",
            "소프트웨어공학과"
        ]
    },
    "recommendations": [
        {
            "id": 1193,
            "name": "소프트웨어공학개론",
            "description": "소프트웨어공학은 신뢰성있는 고품질의 소프트웨어를 효율적인 비용으로 개발하고 이를 운용·유지보수·폐기하는 전 과정에 적용되는 시스템적 접근 방안을 의미한다. 소프트웨어공학의 영역은 소프트웨어 개발에 관련된 소프트웨어 요구사항, 설계, 개발, 테스트, 유지보수 영역과 개발 지원 및 조직화와 관련된 형상관리, 프로젝트 관리, 소프트웨어 프로세스, 품질 등으로 구성된다. 소프트웨어공학의 기본 개념과 원리를 소개하고, 둘째로는 현재 사용되고 있는 기법과 도구들을 소개하며, 셋째로는 새로운 소프트웨어 개발 방법론인 객체지향 소프트웨어공학 기법과 소프트웨어 공학의 주요 과제들을 소개함으로써 소프트웨어공학에 관한 이해를 증진시킨다.",
            "curriculum": "사전이해도 조사, 강좌 소개\n\n제1장 소프트웨어공학의 개요\n\n- 소프트웨어, 소프트웨어공학, 소프트웨어 품질, 소프트웨어 프로젝트 유형YUMMI제1장 소프트웨어공학의 개요\n\n- 소프트웨어 프로젝트 작업, 객체지향 소프트웨어공학, 최신 소프트웨어공학의 핵심 기술YUMMI제2장 객체지향 개념\n\n- 개요, 객체지형 개념, 클래스와 객체, 인스턴스 변수, 클래스 변수, 메소드, 오퍼레이션, 상속, 다형성, UMLYUMMI제3장 요구 분석\n- 개요, 도메인 분석, 문제 정의와 범위 설정, 요구 추출, 요구 추출 방법, 사용사례 분석, 요구 문서화, 요구 검토, (사례연구) 내비게이션 시스템 YUMMI제4장 클래스 모델링\n\n- 개요, 클래스 다이어그램의 기초, 클래스와 가시성, 연관 관계와 다중도, 일반화 관계와 전체/부분 관계, 클래스 다이어그램의 고급 표현, 클래스 다이어그램 작성 과정, 코드 매핑YUMMI제5장 동적  모델링\n\n- 개요, 시퀀스 다이어그램, 커뮤니케이션 다이어그램, 상태 다이어그램, 액티비티 다이어그램, 동적 다이어그램의 구현 YUMMI제6장 아키텍처 설계\n\n- 개요, 설계 과정, 설계 원리, 설계안 결정, 아키텍처 모델YUMMI제6장 아키텍처 설계\n- 패키지 다이어그램과 배치 다이어그램, 아키텍처 패턴, 아키텍처 문서화\n- 중간고사 실시YUMMI제7장 디자인 패턴\n\n- 개요, 디자인 패턴 소개, 기본 패턴 \n\n- (일부 내용 강의 생략 및 패턴 사례 적용 과제 부여)YUMMI제8장 구현\n- 개요, 구현의 정의, 코딩 원리, 코딩 표준, 설계와의 매핑, 리팩토링, 검토YUMMI제9장 테스트\n\n- 개요, 테스트의 정의, 블랙박스 테스트, 화이트박스 테스트, 객체지향 테스트, 통합 및 시스템 테스트, 테스트 관리, 테스트 자동화 도구 YUMMI제10장 유지보수\n\n- 개요, 유지보수의 정의, 유지보수 작업 단계와 모델, 형상 관리, 리엔지니어링, 유지보수 도구YUMMI제11장 프로젝트 관리\n\n- 개요, 프로젝트 관리의 정의, 소프트웨어 개발 프로세스, 개발 노력의 추정, 일정계획과 관리, 팀 구성, 프로젝트 계획서 YUMMI제12장 품질 보증\n\n- 개요, 품질의 정의, 품질 보증, 확인과 검증, 품질 측정, 프로세스  품질 개선, 품질 보증 계획과 품질 제어 YUMMI- 기말고사 실시YUMMI",
            "student_grade": 2,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "소프트웨어공학개론 소프트웨어공학은 신뢰성있는 고품질의 소프트웨어를 효율적인 비용으로 개발하고 이를 운용·유지보수·폐기하는 전 과정에 적용되는 시스템적 접근 방안을 의미한다. 소프트웨어공학의 영역은 소프트웨어 개발에 관련된 소프트웨어 요구사항, 설계, 개발, 테스트, 유지보수 영역과 개발 지원 및 조직화와 관련된 형상관리, 프로젝트 관리, 소프트웨어 프로세스, 품질 등으로 구성된다. 소프트웨어공학의 기본 개념과 원리를 소개하고, 둘째로는 현재 사용되고 있는 기법과 도구들을 소개하며, 셋째로는 새로운 소프트웨어 개발 방법론인 객체지향 소프트웨어공학 기법과 소프트웨어 공학의 주요 과제들을 소개함으로써 소프트웨어공학에 관한 이해를 증진시킨다.",
            "similarity": 0.28032886790142275
        },
        {
            "id": 1711,
            "name": "소프트웨어공학개론 1",
            "description": "소프트웨어공학은 신뢰성있는 고품질의 소프트웨어를 효율적인 비용으로 개발하고 이를 운용·유지보수·폐기하는 전 과정에 적용되는 시스템적 접근 방안을 의미한다. 소프트웨어공학의 영역은 소프트웨어 개발에 관련된 소프트웨어 요구사항, 설계, 개발, 테스트, 유지보수 영역과 개발 지원 및 조직화와 관련된 형상관리, 프로젝트 관리, 소프트웨어 프로세스, 품질 등으로 구성된다. 소프트웨어공학의 기본 개념과 원리를 소개하고, 둘째로는 현재 사용되고 있는 기법과 도구들을 소개하며, 셋째로는 새로운 소프트웨어 개발 방법론인 객체 지향 소프트웨어공학 기법과 소프트웨어 공학의 주요 과제들을 소개함으로서 소프트웨어공학에 관한 이해를 증진시킨다.",
            "curriculum": "(강좌소개 및 강의방법 소개)\n\n제1장 소프트웨어공학의 개요(1)YUMMI제1장 소프트웨어공학의 개요(2)YUMMI제2장  프로세스와 방법론(1)YUMMI제2장  프로세스와 방법론(2)YUMMI제3장 프로젝트 관리와 계획(1)YUMMI제3장 프로젝트 관리와 계획(2)YUMMI제3장 프로젝트 관리와 계획(3)YUMMI제4장  요구분석(1)\n\n(중간고사)YUMMI제4장  요구분석(2)YUMMI제4장  요구분석(3)YUMMI제5장 모델링(1)YUMMI제5장 모델링(2)YUMMI제6장 아키텍처 설계(1)YUMMI제6장 아키텍처 설계(2)YUMMI제6장 아키텍처 설계(3) 및 시험YUMMI",
            "student_grade": 2,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "소프트웨어공학개론 1 소프트웨어공학은 신뢰성있는 고품질의 소프트웨어를 효율적인 비용으로 개발하고 이를 운용·유지보수·폐기하는 전 과정에 적용되는 시스템적 접근 방안을 의미한다. 소프트웨어공학의 영역은 소프트웨어 개발에 관련된 소프트웨어 요구사항, 설계, 개발, 테스트, 유지보수 영역과 개발 지원 및 조직화와 관련된 형상관리, 프로젝트 관리, 소프트웨어 프로세스, 품질 등으로 구성된다. 소프트웨어공학의 기본 개념과 원리를 소개하고, 둘째로는 현재 사용되고 있는 기법과 도구들을 소개하며, 셋째로는 새로운 소프트웨어 개발 방법론인 객체 지향 소프트웨어공학 기법과 소프트웨어 공학의 주요 과제들을 소개함으로서 소프트웨어공학에 관한 이해를 증진시킨다.",
            "similarity": 0.2773533758699681
        },
        {
            "id": 813,
            "name": "임베디드시스템개론",
            "description": "어떠한 마이크로프로세서나 실시간 운영체제 그리고 소프트웨어 설계 방법론을 사용하든지에 상관없이 임베디드 시스템 소프트웨어에 대한 기본적인 원리는 같기 때문에 이 수업을 통해 어떠한 임베디드 시스템 프로젝트에도 적용할 수 있는 기본적인 원리를 다루는데 초점을 맞춘다. \n",
            "curriculum": "강의소개, 기초 학력 조사, IoT 개론 1\nYUMMIIoT 개론 2\nYUMMI아두이노 개요\nYUMMI시리얼 통신\nYUMMILCD 출력\nYUMMILED 실험\nYUMMI디지털 신호 입력\nYUMMI중간 고사YUMMI아날로그 신호 입력\nYUMMI모터 구동\nYUMMIArduino 개별 발표\nYUMMI적외선 리모컨\nYUMMI여러가지 부품들\nYUMMI기타 프로젝트\nYUMMI기말 고사YUMMI",
            "student_grade": 2,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "임베디드시스템개론 어떠한 마이크로프로세서나 실시간 운영체제 그리고 소프트웨어 설계 방법론을 사용하든지에 상관없이 임베디드 시스템 소프트웨어에 대한 기본적인 원리는 같기 때문에 이 수업을 통해 어떠한 임베디드 시스템 프로젝트에도 적용할 수 있는 기본적인 원리를 다루는데 초점을 맞춘다. \n",
            "similarity": 0.19355500922000607
        },
        {
            "id": 927,
            "name": "JAVA프로그래밍및실습 1",
            "description": "SW개발에서 많이 활용되고 있는 객체지향 프로그래밍 언어인 Java언어 학습을 통해 객체지향언어를 이용한 소프트웨어 설계와 구현에 대한 원칙과 이론을 학습하고 구현능력을 함양한다. \n본 강의는 모바일 어플리케이션을 포함한 각종 소프트웨어 개발에 필요한 프로그래밍의 기초를 다지는 것을 목표로 한다. ",
            "curriculum": "JAVA의 특징을 알고, JAVA 프로그래밍을 위한 개발 환경을 구축할 수 있다.YUMMIJAVA의 자료형과 연산자를 학습한다.YUMMI제어문을 학습하여 프로그램의 흐름을 제어할 수 있다,YUMMI배열과 ArrayList 자료구조를 활용하여 동일한 자료형의 많은 데이터를 저장 및 관리할 수 있다.YUMMI객체지향 개념을 알고 클래스와 인스턴스 객체를 생성할 수 있다.YUMMI생성자, 소멸자와 같은 특수한 메소드를 작성할 수 있고 객체 배열을 활용할 수 있다.YUMMI상속 개념을 이해하고 메소드 오버라이딩을 구현할 수 있다.YUMMI중간고사YUMMI인터페이스를 이용하여 다중 상속을 구현할 수 있다.YUMMI다양한 메소드의 특징을 알고 활용할 수 있으며 패키지를 선언하고 사용할 수 있다.YUMMIJAVA가 제공하는 유용한 클래스를 활용할 수 있다. YUMMI컬렉션이 무엇인지 알고, 컬렉션을 사용하여 데이터를 편리하게 저장 및 관리할 수 있다.YUMMI입출력 스트림을 이해하고 파일 객체를 활용할 수 있다.YUMMI멀티 태스킹의 개념을 알고, 스레드 스케줄링을 프로그래밍할 수 있다.YUMMI기말고사YUMMI",
            "student_grade": 2,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "JAVA프로그래밍및실습 1 SW개발에서 많이 활용되고 있는 객체지향 프로그래밍 언어인 Java언어 학습을 통해 객체지향언어를 이용한 소프트웨어 설계와 구현에 대한 원칙과 이론을 학습하고 구현능력을 함양한다. \n본 강의는 모바일 어플리케이션을 포함한 각종 소프트웨어 개발에 필요한 프로그래밍의 기초를 다지는 것을 목표로 한다. ",
            "similarity": 0.13516598548698294
        },
        {
            "id": 814,
            "name": "자료구조",
            "description": "소프트웨어 시스템을 설계 구현하는데 필요한 여러 자료구조의 기본 개념과 이를 효율적으로 처리하는 방법에 대해 학습한다. 학습의 이해를 높이기 위해 C 언어를 이용한 실습 및 과제를 활용한다. 강의, 실습 및 과제를 통하여 리스트, 스택, 큐, 트리, 그래프, 정렬, 해싱, 탐색 등의 기본적인 자료구조의 이해, 설계 및 분석 방법을 숙지하여 실무에 적용할 수 있는 프로그래밍 능력 함양을 목표로 한다.",
            "curriculum": "자료구조와 알고리즘의 개념, 시간 복잡도의 개념, 알고리즘 분석 기법, 자료구조 표기법을 이해YUMMI순환의 개념, 순환 알고리즘의 구조, 순환 호출 사용 시 주의점을 이해하고, 순환 호출 응용력을 배양YUMMI배열, 구조체, 포인터의 개념을 이해하고, 배열 응용 프로그램을 작성. 포인터 관련 연산자를 학습하고 동적 메모리 할당 및 반납 메카니즘을 이해YUMMI스택의 개념과 추상 자료형, 동작 원리를 이해하고 스택 응용 프로그램을 제작할 수 있는 능력을 배양YUMMI큐의 개념과 추상 자료형, 덱의 개념과 구현 방법을 이해하고, 큐를 이용하여 프로그램 할 수 있는 능력을 배양YUMMI리스트의 추상 데이터 타입을 이해하고, 배열과 연결 리스트를 이용하여 구현할 수 있는 능력을 배양YUMMI원형/이중 연결 리스트의 개념과 여러 가지 연산들을 이해하고, 연결된 스택과 연결된 큐를 이해YUMMI자료구조와 알고리즘, 순환, 배열, 구조체, 포인터, 스택, 큐, 연결 리스트에 대한 이해 정도를 평가YUMMI트리의 개념, 순회 알고리즘을 이해하고, 이진 탐색 트리의 동작 원리와 효율성을 이해YUMMI우선순위 큐의 개념과 배열, 리스트로 구현된 우선 순위 큐의 장단점을 이해하고, 히프의 동작 원리, 효율성, 배열을 이용한 구현을 이해YUMMI그래프의 개념, 2가지 표현 방법, 순회 방법을 이해YUMMI그래프의 최소 신장트리, 최단 경로, 위상 정렬 알고리즘을 이해YUMMI정렬의 개념을 이해하고, 각 정렬 알고리즘의 동작 원리, 장점과 단점, 효율성, C언어 구현을 이해YUMMI순차/이진 탐색의 장단점, 색인/보간 탐색의 개념, 균형 트리를 사용하는 목적을 이해하고, AVL 트리의 원리와 삽입 연산, 2-3 트리 및 2-3-4 트리의 개념을 이해YUMMI트리, 우선순위 큐, 그래프, 정렬, 탐색에 대한 이해 정도를 평가YUMMI",
            "student_grade": 2,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "자료구조 소프트웨어 시스템을 설계 구현하는데 필요한 여러 자료구조의 기본 개념과 이를 효율적으로 처리하는 방법에 대해 학습한다. 학습의 이해를 높이기 위해 C 언어를 이용한 실습 및 과제를 활용한다. 강의, 실습 및 과제를 통하여 리스트, 스택, 큐, 트리, 그래프, 정렬, 해싱, 탐색 등의 기본적인 자료구조의 이해, 설계 및 분석 방법을 숙지하여 실무에 적용할 수 있는 프로그래밍 능력 함양을 목표로 한다.",
            "similarity": 0.13030831697929854
        },
        {
            "id": 716,
            "name": "소프트웨어개발프로세스",
            "description": "소프트웨어 개발 프로세스는 소프트웨어 프로덕트를 개발하기 위하여 필요한 과정 또는 구조이며, 고전적 모델들과 근래에 이슈화 되고 있는 몇 가지 모델들이 존재하며 이들 각각은 해당 단계별로 요구되는 활동이나 작업을 기술하고 있다. 본 강좌에서는 애자일 방법론을 기반으로 하는 소프트웨어 개발 프로세스들을 중심으로 대규모 프로젝트에서 빈번하고 중요하게 발생하는 문제점들을 해결하기 위한 프로세스적 접근 방법들을 제시하고 아울러 설계 단계에서 고려되어야 할 설계 원칙들을 소개한다. 이를 통해 향 후 팀으로 수행되는 프로젝트에서 진행되는 각각의 프로세스를 이해하고 이를 적용 및 개선할 수 있는 능력을 갖추도록 한다.",
            "curriculum": "강의 소개\n\n강의 진행을 위한 설문조사 및 기초 학력 평가\n\n소프트웨어 개발 프로세스 개요YUMMIIntroduction to Agile MethodsYUMMIWhy the Waterfall Model Doesn't Work\n\nSoftware Development Best PracticesYUMMIThe Essence of RUPYUMMIThe Essence of XPYUMMIThe Essence of ScrumYUMMIComparing ProcessesYUMMI중간고사YUMMIWell-Designed Software 1YUMMIWell-Designed Software 2YUMMIflexible Design 1YUMMIflexible Design 2YUMMIDesign Principles 1YUMMIDesign Principles 2YUMMI기말고사YUMMI",
            "student_grade": 3,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "소프트웨어개발프로세스 소프트웨어 개발 프로세스는 소프트웨어 프로덕트를 개발하기 위하여 필요한 과정 또는 구조이며, 고전적 모델들과 근래에 이슈화 되고 있는 몇 가지 모델들이 존재하며 이들 각각은 해당 단계별로 요구되는 활동이나 작업을 기술하고 있다. 본 강좌에서는 애자일 방법론을 기반으로 하는 소프트웨어 개발 프로세스들을 중심으로 대규모 프로젝트에서 빈번하고 중요하게 발생하는 문제점들을 해결하기 위한 프로세스적 접근 방법들을 제시하고 아울러 설계 단계에서 고려되어야 할 설계 원칙들을 소개한다. 이를 통해 향 후 팀으로 수행되는 프로젝트에서 진행되는 각각의 프로세스를 이해하고 이를 적용 및 개선할 수 있는 능력을 갖추도록 한다.",
            "similarity": 0.22779547938945988
        },
        {
            "id": 2561,
            "name": "소프트웨어시스템분석및설계",
            "description": "소프트웨어 시스템의 개발은 분석, 설계, 구현 3가지 단계의 반복적이고 점진적인 과정을 통해 이루어 진다. 본 강좌에서는 시스템을 분석하고 설계하는데 고려되어야 하는 이슈들과 함께 분석 및 설계를 위하여 사용되는 방법론들과 기법들에 대하여 다룬다. 특히 UML(Unified Modeling Language)을 이용한 객체 지향 소프트웨어 개발과 관련된 사항을 중점적으로 다루며, 실제 사례를 통한 학습을 통하여 시스템 전체에 대한 분석 및 설계가 가능한 인력 양성을 목표로 한다.",
            "curriculum": "강의소개 및 강의 진행 관련 설문과 사전 지식 평가YUMMIIntroduction\n- Software Modeling\n- Object-Oriented Methods and the Unified Modeling LanguageYUMMIOverview of the UML NotationYUMMIGuided Tutorial in Analysis Modeling Problem Statements for Case Studies YUMMISoftware Design and Architecture ConceptsYUMMIRequirements DeterminationYUMMIOverview of Software Modeling and Design MethodYUMMI중간고사YUMMIUse Case ModelingYUMMIStatic ModelingYUMMIObject and Class StructuringYUMMIObject and Class StructuringYUMMIDynamic Interaction ModelingYUMMIFinite State MachinesYUMMI기말고사YUMMI",
            "student_grade": 3,
            "semester": 2,
            "department_name": "소프트웨어공학과",
            "full_text": "소프트웨어시스템분석및설계 소프트웨어 시스템의 개발은 분석, 설계, 구현 3가지 단계의 반복적이고 점진적인 과정을 통해 이루어 진다. 본 강좌에서는 시스템을 분석하고 설계하는데 고려되어야 하는 이슈들과 함께 분석 및 설계를 위하여 사용되는 방법론들과 기법들에 대하여 다룬다. 특히 UML(Unified Modeling Language)을 이용한 객체 지향 소프트웨어 개발과 관련된 사항을 중점적으로 다루며, 실제 사례를 통한 학습을 통하여 시스템 전체에 대한 분석 및 설계가 가능한 인력 양성을 목표로 한다.",
            "similarity": 0.19658467443784627
        },
        {
            "id": 3303,
            "name": "메카트로닉스및실험",
            "description": "메카트로닉스 구성요소인 센서 및 신호처리, 구동기, 컴퓨터 인터페이스 등에 관한 기초지식을 습득하고 시스템 구현을 위한 설계 및 하드웨어 실장과정을 이해한다. ",
            "curriculum": "메카트로닉스 개요 및 항공우주분야 응용사례소개 YUMMI시스템 응답 : 계측시스템, 1차 및 2차 동적 시스템의 응답특성 YUMMI아날로그 신호처리 : OP-Amp 이용 기본연산, 신호처리 기초 YUMMI데이터 수집 : 정량화 원리, A/D 및 D/A, DAQ 디바이스 및 소프트웨어 YUMMI센서 I : 위치, 속도, 응력, 변형률 측정 YUMMI\n\n센서 II : 온도, 진동, 가속도 측정 YUMMI구동기(actuator) : 전자기의 원리, 직류모터 및 모터선정, 스텝모터, 유압 및 공압, 압전구동기 등YUMMI교과목 상담 YUMMI종합시험 YUMMILabVIEW 기초 YUMMILabVIEW 활용 (My-Rio)YUMMIMicro Vehicle  실습 (IR Sensor 보정, 모터 제어, 주행 재어 및 장애물 탐지)YUMMIMicro Vehicle  실습 (IR Sensor 보정, 모터 제어, 주행 재어 및 장애물 탐지)YUMMI실습 결과 발표회YUMMI종합토론YUMMI",
            "student_grade": 3,
            "semester": 2,
            "department_name": "항공우주공학과",
            "full_text": "메카트로닉스및실험 메카트로닉스 구성요소인 센서 및 신호처리, 구동기, 컴퓨터 인터페이스 등에 관한 기초지식을 습득하고 시스템 구현을 위한 설계 및 하드웨어 실장과정을 이해한다. ",
            "similarity": 0.18253930973439608
        },
        {
            "id": 2126,
            "name": "소프트웨어공학캡스톤프로젝트",
            "description": "본 과목은 기초설계와 요소설계 교과목에서 학습한 내용을 토대로 종합설계(캡스톤디자인)를 수행하는 교과목으로 소프트웨어 엔지니어로서 소프트웨어를 개발함에 있어서 요구사항 분석, 설계, 구현, 확인 및 검증을  체계적인 프로세스와 유효한 산출물들 생성하는 방법을 통해 익힘으로써 양질의 소프트웨어 프로덕트를 제작할 수 있고, 팀별 협업을 통하여 창의적 아이디어 도출을 위한 의사소통 능력과 협업 능력 배양을 목표로 한다.",
            "curriculum": "- 교과목 소개\n- 조편성 및 프로젝트 수행 매뉴얼 공지YUMMI- 프로젝트 주제 관련 토론\n- 세부 주제 선정YUMMI- 프로젝트 계획서 발표\n- 프로젝트 운영 관련 멘토링YUMMI- 요구사항 분석 및 요구사항 명세서 작성 멘토링YUMMI- 요구사항 명세서 검토\n- 작품 설계 및 멘토링 1YUMMI- 작품 설계 및 멘토링 2YUMMI- 작품 설계 및 멘토링 3YUMMI- 중간 보고서 평가\n- 작품 프로토타입 평가YUMMI- 작품 구현 및 멘토링 1YUMMI- 작품 구현 및 멘토링 2YUMMI- 작품 구현 및 멘토링 3YUMMI- 작품 구현 및 멘토링 4YUMMI- 검증 및 확인 1YUMMI- 검증 및 확인 2\n- 최종 보고서 및 작품 관련 자료 작성 검토YUMMI- 최종 보고서 및 작품 평가(지체 빌표평가 및 평가위원회 평가)YUMMI",
            "student_grade": 4,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "소프트웨어공학캡스톤프로젝트 본 과목은 기초설계와 요소설계 교과목에서 학습한 내용을 토대로 종합설계(캡스톤디자인)를 수행하는 교과목으로 소프트웨어 엔지니어로서 소프트웨어를 개발함에 있어서 요구사항 분석, 설계, 구현, 확인 및 검증을  체계적인 프로세스와 유효한 산출물들 생성하는 방법을 통해 익힘으로써 양질의 소프트웨어 프로덕트를 제작할 수 있고, 팀별 협업을 통하여 창의적 아이디어 도출을 위한 의사소통 능력과 협업 능력 배양을 목표로 한다.",
            "similarity": 0.1735362891850903
        },
        {
            "id": 2898,
            "name": "소프트웨어아키텍처이론과실제",
            "description": "소프트웨어 아키텍처 설계와 개발을 실무에서 리드할 수 있는 소프트웨어 아키텍트에게 요구되는 아키텍처 드라이버, 품질속성 시나리오, 아키텍처 스타일과 아키텍처 패턴, 아키텍처 분석 및 평가 등 소프트웨어 아키텍처의 이론 및 아키텍처의 기본 지식을 사례연구와 함께 배우고 이를 적용하는 실습을 수행한다. ",
            "curriculum": "SW 아키텍처의 역할과 필요성을 이해한다.YUMMISW 아키텍처의 개념과 요소를 이해한다.YUMMISW 아키텍처의 개념과 요소를 이해한다.YUMMI아키텍처 관점체계, 아키텍처 뷰,  아키텍처 스타일, 아키텍처 패턴의 개념을 이해한다.YUMMI아키텍처 스타일을 이해한다.YUMMI아키텍처 스타일을 이해한다.YUMMI아키텍처 스타일을 이해한다.YUMMI중간시험YUMMI아키텍처 관점체계, 아키텍처 뷰별 아키텍처 모델을 작성할 수 있다.YUMMI아키텍처 뷰별 아키텍처 모델을 작성할 수 있다.YUMMI아키텍처 tactic(전술)의 종류를 알고 활용할 수 있다.YUMMI아키텍처 tactic(전술)의 종류를 알고 활용할 수 있다.YUMMI아키텍처 분석과 평가를 이해한다.YUMMI아키텍처 평가 방법인 ATAM을 이용하여 아키텍처 대안의 트레이드오프를 분석할 수 있다.YUMMI기말시험YUMMI",
            "student_grade": 4,
            "semester": 2,
            "department_name": "소프트웨어공학과",
            "full_text": "소프트웨어아키텍처이론과실제 소프트웨어 아키텍처 설계와 개발을 실무에서 리드할 수 있는 소프트웨어 아키텍트에게 요구되는 아키텍처 드라이버, 품질속성 시나리오, 아키텍처 스타일과 아키텍처 패턴, 아키텍처 분석 및 평가 등 소프트웨어 아키텍처의 이론 및 아키텍처의 기본 지식을 사례연구와 함께 배우고 이를 적용하는 실습을 수행한다. ",
            "similarity": 0.13295243703338913
        },
        {
            "id": 3275,
            "name": "항공드론융합설계",
            "description": "본 과목에서는 학생들이 그동안 습득한 전공 지식을 바탕으로 항공 및 드론의 설계 원리를 이해하고, 이를 개선 및 개발하기 위한 창의력을 키움과 동시에 실제 산업 현장에서의 적응력을 향상시키는데 목적이 있다. 따라서 본 교과목을 통해 문제의 발견 및 분석, 문제 해결을 위한 체계적인 접근 방법, 문제 해석 방법 등을 공부하게 되며, 작품 제작을 통해 관련 기술의 적용성 향상, 아이디어의 구체화 등을 학습하게 된다.",
            "curriculum": "창의적 공학설계 개요 설명, 팀 구성YUMMI작품제작 주제선정 및 연구계획서 작성을 위한 기초자료조사 #1YUMMI작품제작 주제선정 및 연구계획서 작성을 위한 기초자료조사 #1YUMMI주제선정 및 문제해결을 위한 접근방법 토의YUMMI시제품 설계를 위한 배경지식 탐구 #1YUMMI시제품 설계를 위한 배경지식 탐구 #1YUMMI시제품 설계, 부품 및 재료조사 #1YUMMI시제품 설계, 부품 및 재료조사 #2YUMMI시제품 설계, 부품 및 재료조사 #3YUMMI시제품 설계, 부품 및 재료조사 #4YUMMI시제품 제작 #1YUMMI시제품 제작 #2YUMMI시제품 제작 #3YUMMI시제품 제작 #4YUMMI종합발표회, 작품 전시 및 보고서 제출YUMMI",
            "student_grade": 4,
            "semester": 2,
            "department_name": "항공우주공학과",
            "full_text": "항공드론융합설계 본 과목에서는 학생들이 그동안 습득한 전공 지식을 바탕으로 항공 및 드론의 설계 원리를 이해하고, 이를 개선 및 개발하기 위한 창의력을 키움과 동시에 실제 산업 현장에서의 적응력을 향상시키는데 목적이 있다. 따라서 본 교과목을 통해 문제의 발견 및 분석, 문제 해결을 위한 체계적인 접근 방법, 문제 해석 방법 등을 공부하게 되며, 작품 제작을 통해 관련 기술의 적용성 향상, 아이디어의 구체화 등을 학습하게 된다.",
            "similarity": 0.12375488797654183
        }
    ]
}