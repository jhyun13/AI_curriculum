{
    "meta_info": {
        "user_query": "한국 문학을 기반으로 한 웹 콘텐츠 및 모바일 애플리케이션을 개발하고 싶어요. 디지털 환경에서 문학적 자료를 효과적으로 활용하고, 이를 창의적인 방식으로 구현하기 위해 필요한 기술과 학습 과정은 무엇인가요?",
        "expanded_query": "한국 문학을 기반으로 한 웹 콘텐츠 및 모바일 애플리케이션을 개발하고 싶어요. 디지털 환경에서 문학적 자료를 효과적으로 활용하고, 이를 창의적인 방식으로 구현하기 위해 필요한 기술과 학습 과정은 무엇인가요? 한국 문학을 활용한 디지털 콘텐츠 개발 문학 기반의 디지털 콘텐츠 개발자 디지털 콘텐츠 개발 웹 및 모바일 애플리케이션 개발자 한국 문학을 기반으로 한 웹 및 모바일 애플리케이션을 설계, 개발 및 유지보수하며, 디지털 환경에서 문학적 콘텐츠를 창의적으로 활용하고 이를 전달하는 역할을 수행한다. 문학적 자료의 디지털화, 사용자 경험 설계, 앱 개발 및 배포, 콘텐츠 관리 웹 및 모바일 앱 개발, UX/UI 설계, 콘텐츠 관리 시스템 활용프로그래밍 언어 (예: JavaScript, Python), 모바일 앱 개발 프레임워크 (예: React Native, Flutter), 사용자 경험 디자인 한국 문학, 웹 및 모바일 애플리케이션 개발 기초, 컴퓨터 과학의 기본 개념 앱 개발 프레임워크, 사용자 경험 디자인 이론, 콘텐츠 전략 앱 개발 툴 사용법, 문학 기반 콘텐츠의 디지털화 기법, 사용자 피드백 수집 및 분석",
        "given_departments": null,
        "selected_departments": [
            "국어국문학과",
            "컴퓨터인공지능학부",
            "사학과",
            "영어영문학과",
            "소프트웨어공학과"
        ]
    },
    "recommendations": [
        {
            "id": 1193,
            "name": "소프트웨어공학개론",
            "description": "소프트웨어공학은 신뢰성있는 고품질의 소프트웨어를 효율적인 비용으로 개발하고 이를 운용·유지보수·폐기하는 전 과정에 적용되는 시스템적 접근 방안을 의미한다. 소프트웨어공학의 영역은 소프트웨어 개발에 관련된 소프트웨어 요구사항, 설계, 개발, 테스트, 유지보수 영역과 개발 지원 및 조직화와 관련된 형상관리, 프로젝트 관리, 소프트웨어 프로세스, 품질 등으로 구성된다. 소프트웨어공학의 기본 개념과 원리를 소개하고, 둘째로는 현재 사용되고 있는 기법과 도구들을 소개하며, 셋째로는 새로운 소프트웨어 개발 방법론인 객체지향 소프트웨어공학 기법과 소프트웨어 공학의 주요 과제들을 소개함으로써 소프트웨어공학에 관한 이해를 증진시킨다.",
            "curriculum": "사전이해도 조사, 강좌 소개\n\n제1장 소프트웨어공학의 개요\n\n- 소프트웨어, 소프트웨어공학, 소프트웨어 품질, 소프트웨어 프로젝트 유형YUMMI제1장 소프트웨어공학의 개요\n\n- 소프트웨어 프로젝트 작업, 객체지향 소프트웨어공학, 최신 소프트웨어공학의 핵심 기술YUMMI제2장 객체지향 개념\n\n- 개요, 객체지형 개념, 클래스와 객체, 인스턴스 변수, 클래스 변수, 메소드, 오퍼레이션, 상속, 다형성, UMLYUMMI제3장 요구 분석\n- 개요, 도메인 분석, 문제 정의와 범위 설정, 요구 추출, 요구 추출 방법, 사용사례 분석, 요구 문서화, 요구 검토, (사례연구) 내비게이션 시스템 YUMMI제4장 클래스 모델링\n\n- 개요, 클래스 다이어그램의 기초, 클래스와 가시성, 연관 관계와 다중도, 일반화 관계와 전체/부분 관계, 클래스 다이어그램의 고급 표현, 클래스 다이어그램 작성 과정, 코드 매핑YUMMI제5장 동적  모델링\n\n- 개요, 시퀀스 다이어그램, 커뮤니케이션 다이어그램, 상태 다이어그램, 액티비티 다이어그램, 동적 다이어그램의 구현 YUMMI제6장 아키텍처 설계\n\n- 개요, 설계 과정, 설계 원리, 설계안 결정, 아키텍처 모델YUMMI제6장 아키텍처 설계\n- 패키지 다이어그램과 배치 다이어그램, 아키텍처 패턴, 아키텍처 문서화\n- 중간고사 실시YUMMI제7장 디자인 패턴\n\n- 개요, 디자인 패턴 소개, 기본 패턴 \n\n- (일부 내용 강의 생략 및 패턴 사례 적용 과제 부여)YUMMI제8장 구현\n- 개요, 구현의 정의, 코딩 원리, 코딩 표준, 설계와의 매핑, 리팩토링, 검토YUMMI제9장 테스트\n\n- 개요, 테스트의 정의, 블랙박스 테스트, 화이트박스 테스트, 객체지향 테스트, 통합 및 시스템 테스트, 테스트 관리, 테스트 자동화 도구 YUMMI제10장 유지보수\n\n- 개요, 유지보수의 정의, 유지보수 작업 단계와 모델, 형상 관리, 리엔지니어링, 유지보수 도구YUMMI제11장 프로젝트 관리\n\n- 개요, 프로젝트 관리의 정의, 소프트웨어 개발 프로세스, 개발 노력의 추정, 일정계획과 관리, 팀 구성, 프로젝트 계획서 YUMMI제12장 품질 보증\n\n- 개요, 품질의 정의, 품질 보증, 확인과 검증, 품질 측정, 프로세스  품질 개선, 품질 보증 계획과 품질 제어 YUMMI- 기말고사 실시YUMMI",
            "student_grade": 2,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "소프트웨어공학개론 소프트웨어공학은 신뢰성있는 고품질의 소프트웨어를 효율적인 비용으로 개발하고 이를 운용·유지보수·폐기하는 전 과정에 적용되는 시스템적 접근 방안을 의미한다. 소프트웨어공학의 영역은 소프트웨어 개발에 관련된 소프트웨어 요구사항, 설계, 개발, 테스트, 유지보수 영역과 개발 지원 및 조직화와 관련된 형상관리, 프로젝트 관리, 소프트웨어 프로세스, 품질 등으로 구성된다. 소프트웨어공학의 기본 개념과 원리를 소개하고, 둘째로는 현재 사용되고 있는 기법과 도구들을 소개하며, 셋째로는 새로운 소프트웨어 개발 방법론인 객체지향 소프트웨어공학 기법과 소프트웨어 공학의 주요 과제들을 소개함으로써 소프트웨어공학에 관한 이해를 증진시킨다.",
            "similarity": 0.16120992055225772
        },
        {
            "id": 1711,
            "name": "소프트웨어공학개론 1",
            "description": "소프트웨어공학은 신뢰성있는 고품질의 소프트웨어를 효율적인 비용으로 개발하고 이를 운용·유지보수·폐기하는 전 과정에 적용되는 시스템적 접근 방안을 의미한다. 소프트웨어공학의 영역은 소프트웨어 개발에 관련된 소프트웨어 요구사항, 설계, 개발, 테스트, 유지보수 영역과 개발 지원 및 조직화와 관련된 형상관리, 프로젝트 관리, 소프트웨어 프로세스, 품질 등으로 구성된다. 소프트웨어공학의 기본 개념과 원리를 소개하고, 둘째로는 현재 사용되고 있는 기법과 도구들을 소개하며, 셋째로는 새로운 소프트웨어 개발 방법론인 객체 지향 소프트웨어공학 기법과 소프트웨어 공학의 주요 과제들을 소개함으로서 소프트웨어공학에 관한 이해를 증진시킨다.",
            "curriculum": "(강좌소개 및 강의방법 소개)\n\n제1장 소프트웨어공학의 개요(1)YUMMI제1장 소프트웨어공학의 개요(2)YUMMI제2장  프로세스와 방법론(1)YUMMI제2장  프로세스와 방법론(2)YUMMI제3장 프로젝트 관리와 계획(1)YUMMI제3장 프로젝트 관리와 계획(2)YUMMI제3장 프로젝트 관리와 계획(3)YUMMI제4장  요구분석(1)\n\n(중간고사)YUMMI제4장  요구분석(2)YUMMI제4장  요구분석(3)YUMMI제5장 모델링(1)YUMMI제5장 모델링(2)YUMMI제6장 아키텍처 설계(1)YUMMI제6장 아키텍처 설계(2)YUMMI제6장 아키텍처 설계(3) 및 시험YUMMI",
            "student_grade": 2,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "소프트웨어공학개론 1 소프트웨어공학은 신뢰성있는 고품질의 소프트웨어를 효율적인 비용으로 개발하고 이를 운용·유지보수·폐기하는 전 과정에 적용되는 시스템적 접근 방안을 의미한다. 소프트웨어공학의 영역은 소프트웨어 개발에 관련된 소프트웨어 요구사항, 설계, 개발, 테스트, 유지보수 영역과 개발 지원 및 조직화와 관련된 형상관리, 프로젝트 관리, 소프트웨어 프로세스, 품질 등으로 구성된다. 소프트웨어공학의 기본 개념과 원리를 소개하고, 둘째로는 현재 사용되고 있는 기법과 도구들을 소개하며, 셋째로는 새로운 소프트웨어 개발 방법론인 객체 지향 소프트웨어공학 기법과 소프트웨어 공학의 주요 과제들을 소개함으로서 소프트웨어공학에 관한 이해를 증진시킨다.",
            "similarity": 0.15949879162862735
        },
        {
            "id": 1554,
            "name": "논리설계",
            "description": "해당 강의는 컴퓨터 시스템을 구성하는 디지털 회로의 기초 구성을 이해한다. 이를 바탕으로, 디지털 회로의 최적화 알고리즘, 주요 구성을 학습한다, 프로그래밍 언어를 통해 목적에 맞는 디지털 회로를 설계하는 방법을 알아본다.\n",
            "curriculum": "Introduction: Number Systems and ConversionYUMMIBoolean Algebra\nYUMMIApplications of Boolean Algebra: Minterm/Maxterm expansions \nYUMMIKarnaugh Maps\nYUMMIQuine-McCluskey MethodYUMMIMulti-Level Gate Circuit: NAND and NOR gatesYUMMICombinatorial Circuit DesignYUMMI중간 고사YUMMIIntroduction to VHDLYUMMILatches and Flip-FlopsYUMMIRegisters and CountersYUMMIAnalysis of Clocked Sequential CircuitsYUMMIDerivation of State Graphs, Tables, DiagramYUMMISequential Logic Design, Arithmetic Operation CircuitYUMMI기말 고사YUMMI",
            "student_grade": 2,
            "semester": 1,
            "department_name": "컴퓨터인공지능학부",
            "full_text": "논리설계 해당 강의는 컴퓨터 시스템을 구성하는 디지털 회로의 기초 구성을 이해한다. 이를 바탕으로, 디지털 회로의 최적화 알고리즘, 주요 구성을 학습한다, 프로그래밍 언어를 통해 목적에 맞는 디지털 회로를 설계하는 방법을 알아본다.\n",
            "similarity": 0.10975809226826286
        },
        {
            "id": 927,
            "name": "JAVA프로그래밍및실습 1",
            "description": "SW개발에서 많이 활용되고 있는 객체지향 프로그래밍 언어인 Java언어 학습을 통해 객체지향언어를 이용한 소프트웨어 설계와 구현에 대한 원칙과 이론을 학습하고 구현능력을 함양한다. \n본 강의는 모바일 어플리케이션을 포함한 각종 소프트웨어 개발에 필요한 프로그래밍의 기초를 다지는 것을 목표로 한다. ",
            "curriculum": "JAVA의 특징을 알고, JAVA 프로그래밍을 위한 개발 환경을 구축할 수 있다.YUMMIJAVA의 자료형과 연산자를 학습한다.YUMMI제어문을 학습하여 프로그램의 흐름을 제어할 수 있다,YUMMI배열과 ArrayList 자료구조를 활용하여 동일한 자료형의 많은 데이터를 저장 및 관리할 수 있다.YUMMI객체지향 개념을 알고 클래스와 인스턴스 객체를 생성할 수 있다.YUMMI생성자, 소멸자와 같은 특수한 메소드를 작성할 수 있고 객체 배열을 활용할 수 있다.YUMMI상속 개념을 이해하고 메소드 오버라이딩을 구현할 수 있다.YUMMI중간고사YUMMI인터페이스를 이용하여 다중 상속을 구현할 수 있다.YUMMI다양한 메소드의 특징을 알고 활용할 수 있으며 패키지를 선언하고 사용할 수 있다.YUMMIJAVA가 제공하는 유용한 클래스를 활용할 수 있다. YUMMI컬렉션이 무엇인지 알고, 컬렉션을 사용하여 데이터를 편리하게 저장 및 관리할 수 있다.YUMMI입출력 스트림을 이해하고 파일 객체를 활용할 수 있다.YUMMI멀티 태스킹의 개념을 알고, 스레드 스케줄링을 프로그래밍할 수 있다.YUMMI기말고사YUMMI",
            "student_grade": 2,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "JAVA프로그래밍및실습 1 SW개발에서 많이 활용되고 있는 객체지향 프로그래밍 언어인 Java언어 학습을 통해 객체지향언어를 이용한 소프트웨어 설계와 구현에 대한 원칙과 이론을 학습하고 구현능력을 함양한다. \n본 강의는 모바일 어플리케이션을 포함한 각종 소프트웨어 개발에 필요한 프로그래밍의 기초를 다지는 것을 목표로 한다. ",
            "similarity": 0.10218728084545296
        },
        {
            "id": 1539,
            "name": "JAVA프로그래밍",
            "description": "본 강의에서는 최근 SW개발에서 가장 많이 사용되고 있는 객체지향 프로그래밍 언어인 Java언어를 학습한다. 객체지향언어를 이용한 소프트웨어 설계와 구현에 대한 원칙과 이론을 학습하고 이를 Java를 이용하여 구현한다. 본 강의는 모바일 어플리케이션을 포함한 각종 소프트웨어 개발에 필요한 프로그래밍의 기초를 다지는 것을 목표로 한다.",
            "curriculum": "프로그래밍언어 중 JAVA 언어의 특징과 주요 응용역역을 이해한다.YUMMI자바 언어의 개발 환경, 주요 연산자와 조건문을 이해하고 활용할 수 있다.YUMMI자바 언어의 반복문과 배열 선언, 예외처리 방법을 이해하고 활용할 수 있다.YUMMI자바 언어에서 클래스와 객체의 개념을 이해하고 클래스를 정의하고 활용할 수 있다.YUMMI상속의 개념을 이해하고 상속을 활용한 코드의 재사용을 수행할 수 있다.YUMMI자바 언어를 이용하여 패키지를 구축하고 자바의 기본 패키지를 활용할 수 있다.YUMMI자바 언어를 활용하여 주어진 문제를 해결할 수 있다.YUMMI시험YUMMI자바의 제네릭을 이해하고 활용할 수 있다.\n자바의 컬렉션을 이해하고 문제 해결에서 자료구조로 활용할 수 있다.YUMMI제네릭과 컬렉션을 함께 활용하여 주어진 문제를 해결할 수 있다.\n자바에서 파일로부터 자료를 읽고 처리 결과를 파일로 출력할 수 있다.YUMMI주어진 문제를 이해하고 문제 해결을 위한 알고리즘을 자바 언어로 구현할 수 있다.YUMMI주어진 문제를 이해하고 문제 해결을 위한 알고리즘을 자바 언어로 구현할 수 있다.YUMMI자바의 스레드와 멀티태스킹 개념을 이해하고 활용할 수 있다.YUMMI자바의 스레드와 멀티태스킹 개념을 이해하고 활용할 수 있다.YUMMI시험YUMMI",
            "student_grade": 2,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "JAVA프로그래밍 본 강의에서는 최근 SW개발에서 가장 많이 사용되고 있는 객체지향 프로그래밍 언어인 Java언어를 학습한다. 객체지향언어를 이용한 소프트웨어 설계와 구현에 대한 원칙과 이론을 학습하고 이를 Java를 이용하여 구현한다. 본 강의는 모바일 어플리케이션을 포함한 각종 소프트웨어 개발에 필요한 프로그래밍의 기초를 다지는 것을 목표로 한다.",
            "similarity": 0.10210312876947454
        },
        {
            "id": 3117,
            "name": "모바일프로그래밍",
            "description": "태블릿 및 스마트폰과 같은 모바일 시스템 위에서 동작하는 응용 프로그램을 만들기 위한 과정을 학습합니다.",
            "curriculum": "수업 개요 및 안드로이드 OS 의 특징 소개YUMMI안드로이드 스튜디오 설치 및 사용YUMMIHello world 앱 구현 및 단말 연결 실습YUMMI레이아웃 익히기YUMMI위젯 및 이벤트 관리YUMMI안드로이드 화면 전환 익히기YUMMI프래그먼트 실습YUMMI서비스 및 브로드캐스트 리시버 관리YUMMI중간 시험 평가 YUMMI위젯 응용 및 애니메이션 관리YUMMI스레드 및 핸들러의 이해YUMMI네트워크 프로그램 구현YUMMI단말과의 DB, 그래픽 및 멀티미디어 연동YUMMI팀 프로젝트 준비YUMMI팀 프로젝트 발표YUMMI",
            "student_grade": 2,
            "semester": 2,
            "department_name": "컴퓨터인공지능학부",
            "full_text": "모바일프로그래밍 태블릿 및 스마트폰과 같은 모바일 시스템 위에서 동작하는 응용 프로그램을 만들기 위한 과정을 학습합니다.",
            "similarity": 0.19162465671656578
        },
        {
            "id": 3321,
            "name": "소스코드분석",
            "description": "본 강의에서는 통합 개발 환경의 다양한 기능을 활용하고, UML을 사용하여 체계적인 방법으로 \n기존 시스템의 코드를 분석하는 기법을 학습한다. 그리고, 이를 개선하기 위한 다양한 아이디어를 도출 후\nStatis Analysis와, Refactoring 기법을 활용하여 기존 코드를 개선하여 소프트웨어의 개발 실력을 \n실무적인 수준으로 향상하는 것을 목표로 한다. ",
            "curriculum": "소스코드 분석 강의 소개YUMMIJava 프로그래밍 언어 요약YUMMI객체지향 개요, UML Class Diagram and Java(Class)(1/2)YUMMIUML Class Diagram and Java(Class) (2/2)YUMMIJava 소스 코드 분석 방법YUMMIUML Class Diagram and Java(객체, 캡슐화, 정보 은닉)YUMMIUML Sequence Diagram(메시지)YUMMI중간 고사YUMMIUML Class Diagram and Java (복합 객체, 상속)YUMMI1차/2차 과제 분석 및 Swing 및 Pattern소개, \n3차 과제 소개YUMMICode Analysis with Tool SupportYUMMISW Metric/SW RefactoringYUMMISW 품질YUMMITerm Project PresentationYUMMI기말 고사YUMMI",
            "student_grade": 2,
            "semester": 2,
            "department_name": "소프트웨어공학과",
            "full_text": "소스코드분석 본 강의에서는 통합 개발 환경의 다양한 기능을 활용하고, UML을 사용하여 체계적인 방법으로 \n기존 시스템의 코드를 분석하는 기법을 학습한다. 그리고, 이를 개선하기 위한 다양한 아이디어를 도출 후\nStatis Analysis와, Refactoring 기법을 활용하여 기존 코드를 개선하여 소프트웨어의 개발 실력을 \n실무적인 수준으로 향상하는 것을 목표로 한다. ",
            "similarity": 0.14570092343096416
        },
        {
            "id": 716,
            "name": "소프트웨어개발프로세스",
            "description": "소프트웨어 개발 프로세스는 소프트웨어 프로덕트를 개발하기 위하여 필요한 과정 또는 구조이며, 고전적 모델들과 근래에 이슈화 되고 있는 몇 가지 모델들이 존재하며 이들 각각은 해당 단계별로 요구되는 활동이나 작업을 기술하고 있다. 본 강좌에서는 애자일 방법론을 기반으로 하는 소프트웨어 개발 프로세스들을 중심으로 대규모 프로젝트에서 빈번하고 중요하게 발생하는 문제점들을 해결하기 위한 프로세스적 접근 방법들을 제시하고 아울러 설계 단계에서 고려되어야 할 설계 원칙들을 소개한다. 이를 통해 향 후 팀으로 수행되는 프로젝트에서 진행되는 각각의 프로세스를 이해하고 이를 적용 및 개선할 수 있는 능력을 갖추도록 한다.",
            "curriculum": "강의 소개\n\n강의 진행을 위한 설문조사 및 기초 학력 평가\n\n소프트웨어 개발 프로세스 개요YUMMIIntroduction to Agile MethodsYUMMIWhy the Waterfall Model Doesn't Work\n\nSoftware Development Best PracticesYUMMIThe Essence of RUPYUMMIThe Essence of XPYUMMIThe Essence of ScrumYUMMIComparing ProcessesYUMMI중간고사YUMMIWell-Designed Software 1YUMMIWell-Designed Software 2YUMMIflexible Design 1YUMMIflexible Design 2YUMMIDesign Principles 1YUMMIDesign Principles 2YUMMI기말고사YUMMI",
            "student_grade": 3,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "소프트웨어개발프로세스 소프트웨어 개발 프로세스는 소프트웨어 프로덕트를 개발하기 위하여 필요한 과정 또는 구조이며, 고전적 모델들과 근래에 이슈화 되고 있는 몇 가지 모델들이 존재하며 이들 각각은 해당 단계별로 요구되는 활동이나 작업을 기술하고 있다. 본 강좌에서는 애자일 방법론을 기반으로 하는 소프트웨어 개발 프로세스들을 중심으로 대규모 프로젝트에서 빈번하고 중요하게 발생하는 문제점들을 해결하기 위한 프로세스적 접근 방법들을 제시하고 아울러 설계 단계에서 고려되어야 할 설계 원칙들을 소개한다. 이를 통해 향 후 팀으로 수행되는 프로젝트에서 진행되는 각각의 프로세스를 이해하고 이를 적용 및 개선할 수 있는 능력을 갖추도록 한다.",
            "similarity": 0.1460982139643778
        },
        {
            "id": 47,
            "name": "고전시가론",
            "description": " 1. 장르론과 작품론을 중심으로 한국 고전시가의 정체성과 미적 특질을 탐색한다.\n\n 2. 한국 고전시가의 통시적 흐름을 조망한다. \n\n 3. 한국 고전시가에 대한 고찰을 통해 한국인과 한국문화의 정체성을 이해한다.",
            "curriculum": "고전시가의 개념과 범위에 대해 알아본다.YUMMI고전시가의 형식적 특징과 율격에 대해 이해한다.YUMMI고대가요의 장르적 특징과 주요 이론에 대해 살펴본다.YUMMI향가의 장르적 특성과 향가 장르의 주요 이론이 무엇인지 알아본다.YUMMI속요의 개념적 정의와 현재 학계의 대표적인 속요 이론에 대해 살펴본다.YUMMI경기체가 장르론의 전개와 주요 논쟁점에 대해 살펴본다.YUMMI중간고사YUMMI고전시가 장르로서의 악장의 성립 가능성과, 악장 장르의 대표적인 작품론을 살펴본다.YUMMI시조의 장르적 특성과, 시조의 발생 및 기원을 이해한다.YUMMI가사의 장르적 특성과 주요 이론을 살펴본다.YUMMI잡가의 장르적 특징과 작시 원리를 이해한다.YUMMI향가 장르의 대표적인 작품에 대한 현재 학계의 논의를 검토하고 앞으로의 연구 방향을 모색한다.YUMMI속요 장르의 주요 작품에 대한 현재 학계의 논의를 논쟁점 위주로 살펴본다.YUMMI가사 장르의 대표 작품에 대한 문학적, 사회적, 미학적 분석을 시도한다.YUMMI기말고사YUMMI",
            "student_grade": 3,
            "semester": 1,
            "department_name": "국어국문학과",
            "full_text": "고전시가론  1. 장르론과 작품론을 중심으로 한국 고전시가의 정체성과 미적 특질을 탐색한다.\n\n 2. 한국 고전시가의 통시적 흐름을 조망한다. \n\n 3. 한국 고전시가에 대한 고찰을 통해 한국인과 한국문화의 정체성을 이해한다.",
            "similarity": 0.12134833773908199
        },
        {
            "id": 2819,
            "name": "소프트웨어공학",
            "description": "1. 소프트웨어 개발 주기 이해: 소프트웨어 개발 주기와 공학적 접근 방법을 이해하고, 요구사항 분석, 설계, 구현, 테스트, 배포 및 유지보수 단계를 포괄적으로 학습한다.\n2. 소프트웨어 요구사항 관리: 요구사항의 수집, 분석, 문서화, 추적 및 관리 기법을 학습하여 효율적이고 명확한 요구사항 정의의 중요성을 이해하고 실제 프로젝트에 적용한다.\n3. 소프트웨어 설계 기술: 소프트웨어 설계의 다양한 기법과 원칙에 대해 학습하고, 소프트웨어 아키텍처의 중요성과 올바른 설계 결정이 전체 개발 프로세스에 미치는 영향을 이해한다.\n4. 소프트웨어 테스트: 테스트 기법, 테스트 케이스 작성, 오류 추적 및 수정 등 소프트웨어 품질 향상을 위한 테스트 기법과 전략을 배우고, 실제 프로젝트에서 테스트 수행 능력을 향상시킨다.\n5. 소프트웨어 프로젝트 관리: 프로젝트 계획, 일정 관리, 리스크 관리, 팀 협업 등 소프트웨어 프로젝트 관리 기술을 습득하여 프로젝트의 성공적인 완수를 목표로 한다.\n6. 실무적인 소프트웨어 프로젝트 경험: 수강생들은 팀 프로젝트를 통해 실제 소프트웨어 개발 경험을 쌓고, 현업에서 요구되는 협업 능력과 문제 해결 능력을 향상시킨다.",
            "curriculum": "Introduction to SEYUMMISoftware Development Process1YUMMISoftware Development Process2YUMMISoftware RequirementYUMMISystem ModelingYUMMISoftware ArchitectureYUMMIUMLYUMMI중간고사YUMMISoftware TestingYUMMIDependabilityYUMMISoftware ReuseYUMMIComponent based system, Distributed systemYUMMIProject PlanningYUMMITerm Project PresentationYUMMI기말고사YUMMI",
            "student_grade": 3,
            "semester": 2,
            "department_name": "컴퓨터인공지능학부",
            "full_text": "소프트웨어공학 1. 소프트웨어 개발 주기 이해: 소프트웨어 개발 주기와 공학적 접근 방법을 이해하고, 요구사항 분석, 설계, 구현, 테스트, 배포 및 유지보수 단계를 포괄적으로 학습한다.\n2. 소프트웨어 요구사항 관리: 요구사항의 수집, 분석, 문서화, 추적 및 관리 기법을 학습하여 효율적이고 명확한 요구사항 정의의 중요성을 이해하고 실제 프로젝트에 적용한다.\n3. 소프트웨어 설계 기술: 소프트웨어 설계의 다양한 기법과 원칙에 대해 학습하고, 소프트웨어 아키텍처의 중요성과 올바른 설계 결정이 전체 개발 프로세스에 미치는 영향을 이해한다.\n4. 소프트웨어 테스트: 테스트 기법, 테스트 케이스 작성, 오류 추적 및 수정 등 소프트웨어 품질 향상을 위한 테스트 기법과 전략을 배우고, 실제 프로젝트에서 테스트 수행 능력을 향상시킨다.\n5. 소프트웨어 프로젝트 관리: 프로젝트 계획, 일정 관리, 리스크 관리, 팀 협업 등 소프트웨어 프로젝트 관리 기술을 습득하여 프로젝트의 성공적인 완수를 목표로 한다.\n6. 실무적인 소프트웨어 프로젝트 경험: 수강생들은 팀 프로젝트를 통해 실제 소프트웨어 개발 경험을 쌓고, 현업에서 요구되는 협업 능력과 문제 해결 능력을 향상시킨다.",
            "similarity": 0.15051734952764262
        },
        {
            "id": 3363,
            "name": "웹서비스설계",
            "description": "1. 웹 서비스 구조에 대한 이해를 바탕으로 Front-End/ Back-End 개발자로서의 역량을 기르도록 함.\n2. AGI (Artificial General Intelligence) 시대에 맞춰 이를 활용한 개발 역량을 기르도록 함.\n3. Back-End의 구조와 HTTP 통신에 대한 이해를 기반으로 REST API를 개발/활용하는 역량을 기르도록 함.\n4. Front-End/ Back-End의 여러 프레임워크에 대한 이해를 바탕으로, 학생 본인만의 개발 역량을 기르도록 함.",
            "curriculum": "웹서비스에 대한 기본적인 구조 이해YUMMI웹서비스에 대한 심화적인 구조 이해YUMMIGithub에 대한 이해YUMMIGitHub에 대한 심도 깊은 이해 및 GitHub Pages를 활용한 정적 웹사이트 배포YUMMIGPT를 활용한 프론트 개발에 대한 이해YUMMI백엔드 프레임워크 소개 및 이해YUMMI백엔드 구조에 대한 이해 및 서버 사이드에서의 디자인 패턴을 이해하도록 함.YUMMI중간고사 기간YUMMI백엔드와 REST API에 대한 이해 및 API 문서화에 대한 이해YUMMIREST API 실습을 통한 이해YUMMI프론트/백엔드에서의 로그인 로직에 대한 이해YUMMI소셜 로그인 및 OAUTH에 대한 이해YUMMI백엔드와 Database에 대한 이해 및 연동YUMMI프론트엔드 및 백엔드 서비스 배포 방법에 대한 이해 I - 문서화 및 자동화 중심YUMMI프론트엔드 및 백엔드 서비스 배포 방법에 대한 이해 II - 실습 중심YUMMI",
            "student_grade": 3,
            "semester": 2,
            "department_name": "컴퓨터인공지능학부",
            "full_text": "웹서비스설계 1. 웹 서비스 구조에 대한 이해를 바탕으로 Front-End/ Back-End 개발자로서의 역량을 기르도록 함.\n2. AGI (Artificial General Intelligence) 시대에 맞춰 이를 활용한 개발 역량을 기르도록 함.\n3. Back-End의 구조와 HTTP 통신에 대한 이해를 기반으로 REST API를 개발/활용하는 역량을 기르도록 함.\n4. Front-End/ Back-End의 여러 프레임워크에 대한 이해를 바탕으로, 학생 본인만의 개발 역량을 기르도록 함.",
            "similarity": 0.1419238466555137
        },
        {
            "id": 3702,
            "name": "디지털시스템설계",
            "description": "해당 강의는 VHDL 및 HLS을 활용하여 디지털 논리 회로에 관련된 설계 방법을 실습하고, 이를 바탕으로 컴퓨터 프로세싱 연산을 구현하는 것을 목표로 한다\n(전반부) VHDL를 활용하여 디지털 논리 회로의 주요 개념을 복습하고, 주요 예시를 통해 기본적인 디지털 논리 회로 설계 방법론을 익힌다.\n(후반부) 전반부의 내용을 바탕으로 부동소수점 연산, MIPS 연산의 일부를 구현한다. 또한 HLS 설계 개념 및 간단한 예시를 다룬다. 배운 내용을 통해 특정 디지털 연산을 구현하는 팀 프로젝트를 진행한다.\n\n- 해당 강의는 프로그래밍 실습을 통해 많은 부분 진행되며, 따라서 개별 노트북을 통해 수업중에도 실습가능한 환경을 구비할 것\n",
            "curriculum": "IntroductionYUMMIDigital abstraction & fundamentals of logic design\nYUMMIIntroduction to VHDL\nYUMMIIntroduction to Programmable Logic Devices, setup\nYUMMIVHDL Design Examples\nYUMMILogic Design Strategy (Verification and Testing)\nYUMMISM Charts and Microprogramming\nYUMMI중간 고사YUMMIFloating-Point Arithmetic\nYUMMIFloating-Point Arithmetic\nYUMMIDesign of RISC Microprocessors\nYUMMIDesign of RISC Microprocessors\nYUMMIIntroduction to HLS\nYUMMIHLS Design Example\nYUMMI프로젝트 평가\nYUMMI",
            "student_grade": 3,
            "semester": 2,
            "department_name": "컴퓨터인공지능학부",
            "full_text": "디지털시스템설계 해당 강의는 VHDL 및 HLS을 활용하여 디지털 논리 회로에 관련된 설계 방법을 실습하고, 이를 바탕으로 컴퓨터 프로세싱 연산을 구현하는 것을 목표로 한다\n(전반부) VHDL를 활용하여 디지털 논리 회로의 주요 개념을 복습하고, 주요 예시를 통해 기본적인 디지털 논리 회로 설계 방법론을 익힌다.\n(후반부) 전반부의 내용을 바탕으로 부동소수점 연산, MIPS 연산의 일부를 구현한다. 또한 HLS 설계 개념 및 간단한 예시를 다룬다. 배운 내용을 통해 특정 디지털 연산을 구현하는 팀 프로젝트를 진행한다.\n\n- 해당 강의는 프로그래밍 실습을 통해 많은 부분 진행되며, 따라서 개별 노트북을 통해 수업중에도 실습가능한 환경을 구비할 것\n",
            "similarity": 0.11644720683775549
        },
        {
            "id": 26,
            "name": "인간-컴퓨터상호작용",
            "description": "인간-컴퓨터 상호작용(Human-Computer Interaction)의 기본 원리에 대해 학습한다. 본 수업의 주요 목표는 다음과 같다. \n1)사용자 및 사용자 중심 디자인(UCD)에 대한 이해, 2)사용성의 원리와 평가에 대한 이해, 3)인터페이스 설계 및 사용자 관점의 시스템 평가에 대한 경험 배양",
            "curriculum": "Introduction / History of HCI YUMMIHCI Framework / Design Process / User Centered DesignYUMMIUsability PrinciplesYUMMIUser – Senses \nUser - Information ProcessingYUMMIUser Requirements\nDesign implications, TasksYUMMIPrototypingYUMMIDesign / Sketch / Mid-fi prototyping\nModels of UsersYUMMI중간고사YUMMIUsability EvaluationYUMMIEvaluation Data, HeuristicsYUMMIUniversal Design\nEthics and design\nInternational issuesYUMMIAR & VRYUMMIData visualizationYUMMI기말고사YUMMIFinal ProjectYUMMI",
            "student_grade": 4,
            "semester": 1,
            "department_name": "컴퓨터인공지능학부",
            "full_text": "인간-컴퓨터상호작용 인간-컴퓨터 상호작용(Human-Computer Interaction)의 기본 원리에 대해 학습한다. 본 수업의 주요 목표는 다음과 같다. \n1)사용자 및 사용자 중심 디자인(UCD)에 대한 이해, 2)사용성의 원리와 평가에 대한 이해, 3)인터페이스 설계 및 사용자 관점의 시스템 평가에 대한 경험 배양",
            "similarity": 0.2188645157760306
        },
        {
            "id": 1663,
            "name": "소프트웨어인터페이스디자인",
            "description": "1. 웹/앱을 위한 UX/UI개념을 이해할 수 있다.\n- 사용자 인터렉션을 위한 인터페이스 계층구조를 이해할 수 있다.\n- UI를 통한 단방향/쌍방향 사용자 인터렉션을 이해할 수 있다.\n2. UX/UI가 고려된 콘텐츠를 기획 및 프로토 타입 제작을 경험 할 수 있다.\n- 시스템 관점에서 UX 디자인을 이해할 수 있다.\n- 사용자의 인지적 특성을 인터랙션 디자인에 반영할 수 있다.\n- 설계원칙을 명확하게 이해하고 인터렉션 디자인에 적용할 수 있다.\n- 태스크 지식을 전문 사용자 수준으로 이해할 수 있다.\n- 사용자 요구사항과 설계원칙을 반영하여 인터랙션을 디자인할 수 있다.",
            "curriculum": "오리엔테이션YUMMI웹 환경 특징 및 기술 동향YUMMI프로세스 및 방법론YUMMI사용자 모델링YUMMI서비스 콘셉트 정의YUMMIUI/UX 설계YUMMIUI/UX 콘셉트YUMMI중간발표 및 평가\nYUMMI프로토타입 제작 ToolsYUMMI프로토타입 제작YUMMI프로토타입 제작YUMMI프로토타입 제작YUMMI프로토타입 제작YUMMI프로토타입 제작YUMMI최종발표 및 평가YUMMI",
            "student_grade": 4,
            "semester": 1,
            "department_name": "소프트웨어공학과",
            "full_text": "소프트웨어인터페이스디자인 1. 웹/앱을 위한 UX/UI개념을 이해할 수 있다.\n- 사용자 인터렉션을 위한 인터페이스 계층구조를 이해할 수 있다.\n- UI를 통한 단방향/쌍방향 사용자 인터렉션을 이해할 수 있다.\n2. UX/UI가 고려된 콘텐츠를 기획 및 프로토 타입 제작을 경험 할 수 있다.\n- 시스템 관점에서 UX 디자인을 이해할 수 있다.\n- 사용자의 인지적 특성을 인터랙션 디자인에 반영할 수 있다.\n- 설계원칙을 명확하게 이해하고 인터렉션 디자인에 적용할 수 있다.\n- 태스크 지식을 전문 사용자 수준으로 이해할 수 있다.\n- 사용자 요구사항과 설계원칙을 반영하여 인터랙션을 디자인할 수 있다.",
            "similarity": 0.17804717541256682
        },
        {
            "id": 1520,
            "name": "오픈소스소프트웨어개발",
            "description": "1. Open Source SW (OSS)의 이해: OSS의 개념과 생태계, OSS 개발의 특수성 및 주요 OSS의 동향 등에 대해 이해한다.\n2. Open Source SW (OSS) 개발 실습: OSS 환경에서의 프로젝트 실습 및 실제 OSS 및 API 연동을 통한 프로젝트 수행\n3. REST API를 활용한 OSS 개발 실습: 산업 현장에서 많이 활용되는 API 툴을 활용한 OSS 개발 실습 및 프로젝트 수행",
            "curriculum": "OSS에 대한 이해YUMMIOSS에 대한 이해YUMMIOSS 버전 관리 도구에 대한 이해YUMMIOSS 버전 관리 도구에 대한 이해 및 실습YUMMIREST API에 대한 이해YUMMIREST API를 활용한 이해 및 실습 (Chat-GPT)YUMMIREST API를 활용한 이해 및 실습 (Chat-GPT)YUMMI중간고사YUMMIREST API를 활용한 이해 및 실습 (Chat-GPT)YUMMIREST API를 활용한 실습 (Firebase)YUMMIREST API를 활용한 실습 (Firebase)YUMMIREST API를 활용한 실습 (Firebase)YUMMIOSS 문서화에 대한 이해 및 실습YUMMIOSS 문서화에 대한 이해 및 실습YUMMI최종 프로젝트 발표YUMMI",
            "student_grade": 4,
            "semester": 1,
            "department_name": "컴퓨터인공지능학부",
            "full_text": "오픈소스소프트웨어개발 1. Open Source SW (OSS)의 이해: OSS의 개념과 생태계, OSS 개발의 특수성 및 주요 OSS의 동향 등에 대해 이해한다.\n2. Open Source SW (OSS) 개발 실습: OSS 환경에서의 프로젝트 실습 및 실제 OSS 및 API 연동을 통한 프로젝트 수행\n3. REST API를 활용한 OSS 개발 실습: 산업 현장에서 많이 활용되는 API 툴을 활용한 OSS 개발 실습 및 프로젝트 수행",
            "similarity": 0.10139596332442741
        },
        {
            "id": 2699,
            "name": "고전산문론",
            "description": "1. 한국 문학의 갈래와 산국 고전 산문의 연결 및 갈래적 특성을 파악한다.\n2. 한국 고전 산문 작품을 읽고 그 변화 양상을 이해한다..\n3. 한국 고전 산문이 한국 문학사시대별 갈래의 특성과 사적 연결을 살펴보고, 현대문학과의 연계상에 나타난 다양한 문제를 찾고 이해한다.",
            "curriculum": "강의 소개YUMMI문학의 범위, 갈래, 시대구분YUMMI상동YUMMI전장류 산문YUMMI상동YUMMI비지류 산문YUMMI상동YUMMI중간고사YUMMI서발류 산문YUMMI상동YUMMI잡기류 산문YUMMI상동YUMMI논변류 산문YUMMI한국 고전 산문에 대한 종합 정리와 마무리YUMMI기말고사YUMMI",
            "student_grade": 4,
            "semester": 2,
            "department_name": "국어국문학과",
            "full_text": "고전산문론 1. 한국 문학의 갈래와 산국 고전 산문의 연결 및 갈래적 특성을 파악한다.\n2. 한국 고전 산문 작품을 읽고 그 변화 양상을 이해한다..\n3. 한국 고전 산문이 한국 문학사시대별 갈래의 특성과 사적 연결을 살펴보고, 현대문학과의 연계상에 나타난 다양한 문제를 찾고 이해한다.",
            "similarity": 0.10266384832596033
        }
    ]
}